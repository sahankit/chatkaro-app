{"ast":null,"code":"import _objectSpread from\"/Users/ankit.sah/Desktop/chat/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef}from'react';import io from'socket.io-client';import{Send,Users,MessageCircle,Globe,Heart,Music,GraduationCap,ChevronDown}from'lucide-react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const socket=io(process.env.NODE_ENV==='production'?window.location.origin:'http://localhost:5000',{autoConnect:true,reconnection:true,reconnectionAttempts:5,reconnectionDelay:1000});function App(){const[user,setUser]=useState(null);const[username,setUsername]=useState('');const[rooms,setRooms]=useState([]);const[currentRoom,setCurrentRoom]=useState(null);const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[onlineUsers,setOnlineUsers]=useState([]);const[typingUsers,setTypingUsers]=useState([]);const[isTyping,setIsTyping]=useState(false);const[showScrollButton,setShowScrollButton]=useState(false);const[isConnected,setIsConnected]=useState(false);const[joinError,setJoinError]=useState('');const[usernameSuggestions,setUsernameSuggestions]=useState([]);const[isJoining,setIsJoining]=useState(false);const[isRestoringSession,setIsRestoringSession]=useState(true);const messagesEndRef=useRef(null);const messagesContainerRef=useRef(null);const typingTimeoutRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});setShowScrollButton(false);};const handleScroll=()=>{if(messagesContainerRef.current){const{scrollTop,scrollHeight,clientHeight}=messagesContainerRef.current;const isAtBottom=scrollHeight-scrollTop-clientHeight<50;setShowScrollButton(!isAtBottom&&messages.length>5);}};useEffect(()=>{scrollToBottom();},[messages]);// Helper function to get URL parameters\nconst getUrlParams=()=>{const params=new URLSearchParams(window.location.search);return{username:params.get('username'),room:params.get('room')};};// Helper function to update URL\nconst updateUrl=(username,roomId)=>{const params=new URLSearchParams();if(username)params.set('username',username);if(roomId)params.set('room',roomId);const newUrl=\"\".concat(window.location.pathname,\"?\").concat(params.toString());window.history.replaceState({},'',newUrl);};useEffect(()=>{// Try to restore session from URL parameters\nconst urlParams=getUrlParams();if(urlParams.username){console.log('Restoring session from URL:',urlParams);setUsername(urlParams.username);// We'll restore the user and room after connecting to server\n}setIsRestoringSession(false);// Handle connection events\nsocket.on('connect',()=>{console.log('Connected to server successfully!');console.log('Socket ID:',socket.id);setIsConnected(true);// Try to restore session from URL if we have parameters\nconst urlParams=getUrlParams();if(urlParams.username&&!user){console.log('Attempting to restore session for:',urlParams.username);socket.emit('restore_session',urlParams);}});socket.on('disconnect',reason=>{console.log('Disconnected from server:',reason);setIsConnected(false);// Reset state on disconnect\nsetCurrentRoom(null);setMessages([]);setOnlineUsers([]);setTypingUsers([]);});socket.on('connect_error',error=>{console.error('Connection error:',error);});// Socket event listeners\nsocket.on('rooms_list',roomsList=>{console.log('Received rooms list:',roomsList);setRooms(roomsList);});socket.on('user_joined',userData=>{setUser(userData);setIsJoining(false);setJoinError('');setUsernameSuggestions([]);// Update URL with username\nupdateUrl(userData.username,null);console.log('Username saved to URL');});socket.on('session_restored',sessionData=>{console.log('Session restored successfully:',sessionData);setUser(sessionData.user);if(sessionData.currentRoom){setCurrentRoom(sessionData.currentRoom);setMessages(sessionData.currentRoom.messages||[]);setOnlineUsers(sessionData.currentRoom.users||[]);// Update URL to match restored session\nupdateUrl(sessionData.user.username,sessionData.currentRoom.roomId);}setIsRestoringSession(false);});socket.on('session_restore_failed',error=>{console.log('Session restore failed:',error.message);// Clear URL parameters if session restore fails\nwindow.history.replaceState({},'',window.location.pathname);setIsRestoringSession(false);});socket.on('join_error',error=>{console.error('Join error:',error.message);setJoinError(error.message);setUsernameSuggestions(error.suggestions||[]);setIsJoining(false);});socket.on('room_joined',roomData=>{setCurrentRoom(roomData);setMessages(roomData.messages);setOnlineUsers(roomData.users);// Update URL with current room\nif(user){updateUrl(user.username,roomData.roomId);console.log('Current room saved to URL:',roomData.roomName);}});socket.on('new_message',message=>{setMessages(prev=>[...prev,message]);});socket.on('user_joined_room',data=>{setOnlineUsers(prev=>[...prev,data.username]);});socket.on('user_left',data=>{console.log('User left:',data.username);// Use the updated users list if provided, otherwise filter out the user\nif(data.updatedUsers){setOnlineUsers(data.updatedUsers);}else{setOnlineUsers(prev=>prev.filter(u=>u!==data.username));}});socket.on('room_updated',data=>{setRooms(prev=>prev.map(room=>room.id===data.roomId?_objectSpread(_objectSpread({},room),{},{userCount:data.userCount}):room));});socket.on('user_typing',username=>{setTypingUsers(prev=>[...new Set([...prev,username])]);});socket.on('user_stopped_typing',username=>{setTypingUsers(prev=>prev.filter(u=>u!==username));});// Handle heartbeat\nsocket.on('pong',()=>{// Server responded to ping\n});// Send periodic heartbeat\nconst heartbeat=setInterval(()=>{if(socket.connected){socket.emit('ping');}},30000);// Every 30 seconds\n// Handle browser close/refresh\nconst handleBeforeUnload=()=>{if(user){socket.emit('leave_chat');}};window.addEventListener('beforeunload',handleBeforeUnload);// Handle browser navigation (back/forward buttons)\nconst handlePopState=()=>{const urlParams=getUrlParams();console.log('Browser navigation detected, URL params:',urlParams);if(urlParams.username&&urlParams.username!==(user===null||user===void 0?void 0:user.username)){// Username changed via browser navigation\nif(user){// User is already logged in but URL username is different\n// We could either logout and re-login or ignore this\nconsole.log('Username mismatch detected via navigation');}else{// No user logged in, attempt to restore from URL\nsetUsername(urlParams.username);if(socket.connected){socket.emit('restore_session',urlParams);}}}if(urlParams.room&&urlParams.room!==(currentRoom===null||currentRoom===void 0?void 0:currentRoom.roomId)){// Room changed via browser navigation\nif(user&&rooms.find(r=>r.id===urlParams.room)){console.log('Joining room from URL navigation:',urlParams.room);socket.emit('join_room',urlParams.room);}}};window.addEventListener('popstate',handlePopState);// Cleanup function\nreturn()=>{clearInterval(heartbeat);window.removeEventListener('beforeunload',handleBeforeUnload);window.removeEventListener('popstate',handlePopState);socket.off('connect');socket.off('disconnect');socket.off('connect_error');socket.off('rooms_list');socket.off('user_joined');socket.off('session_restored');socket.off('session_restore_failed');socket.off('join_error');socket.off('room_joined');socket.off('new_message');socket.off('user_joined_room');socket.off('user_left');socket.off('room_updated');socket.off('user_typing');socket.off('user_stopped_typing');socket.off('pong');};},[user]);const handleJoin=e=>{e.preventDefault();const trimmedUsername=username.trim();if(!trimmedUsername){setJoinError('Please enter a username');return;}if(trimmedUsername.length<2){setJoinError('Username must be at least 2 characters long');return;}if(trimmedUsername.length>20){setJoinError('Username must be 20 characters or less');return;}setIsJoining(true);setJoinError('');socket.emit('join_user',{username:trimmedUsername});};const joinRoom=roomId=>{socket.emit('join_room',roomId);// Update URL immediately when joining room\nif(user){updateUrl(user.username,roomId);}};const sendMessage=e=>{e.preventDefault();if(newMessage.trim()&&currentRoom){socket.emit('send_message',{content:newMessage.trim()});setNewMessage('');handleStopTyping();// Auto-scroll to bottom when sending a message\nsetTimeout(scrollToBottom,100);}};const handleKeyPress=e=>{if(e.key==='Enter'&&!e.shiftKey){e.preventDefault();sendMessage(e);}};const handleTyping=e=>{setNewMessage(e.target.value);if(!isTyping){setIsTyping(true);socket.emit('typing_start');}clearTimeout(typingTimeoutRef.current);typingTimeoutRef.current=setTimeout(()=>{handleStopTyping();},1000);};const handleStopTyping=()=>{if(isTyping){setIsTyping(false);socket.emit('typing_stop');}};const getCategoryIcon=category=>{switch(category){case'Regional':return/*#__PURE__*/_jsx(Globe,{className:\"w-4 h-4\"});case'Social':return/*#__PURE__*/_jsx(Heart,{className:\"w-4 h-4\"});case'Entertainment':return/*#__PURE__*/_jsx(Music,{className:\"w-4 h-4\"});case'Education':return/*#__PURE__*/_jsx(GraduationCap,{className:\"w-4 h-4\"});case'International':return/*#__PURE__*/_jsx(Globe,{className:\"w-4 h-4\"});default:return/*#__PURE__*/_jsx(MessageCircle,{className:\"w-4 h-4\"});}};const groupedRooms=rooms.reduce((acc,room)=>{if(!acc[room.category]){acc[room.category]=[];}acc[room.category].push(room);return acc;},{});console.log('Current rooms state:',rooms);console.log('Grouped rooms:',groupedRooms);if(!user){return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"login-header\",children:[/*#__PURE__*/_jsx(MessageCircle,{className:\"w-12 h-12 text-blue-500\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"ChatKaro\"}),/*#__PURE__*/_jsx(\"p\",{children:isRestoringSession?'Restoring your session...':'Free Online Chat Rooms'})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleJoin,className:\"login-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter your username (2-20 characters)\",value:username,onChange:e=>{setUsername(e.target.value);if(joinError){setJoinError('');// Clear error when typing\nsetUsernameSuggestions([]);}},maxLength:20,disabled:isJoining,required:true}),joinError&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[joinError,usernameSuggestions.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"username-suggestions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Try these instead:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"suggestions-list\",children:usernameSuggestions.map((suggestion,index)=>/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"suggestion-btn\",onClick:()=>{setUsername(suggestion);setJoinError('');setUsernameSuggestions([]);},children:suggestion},index))})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isJoining||!username.trim(),children:isJoining?'Joining...':'Join Chat'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"login-footer\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Connect with people from around the world\"})})]})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"app-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsx(MessageCircle,{className:\"w-8 h-8\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"ChatKaro\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"header-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ad-space header-ad\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ad-placeholder\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Advertisement\"})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"header-right\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"username\",children:[\"Welcome, \",user.username,\"!\"]})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"app-content\",children:[/*#__PURE__*/_jsxs(\"aside\",{className:\"sidebar\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sidebar-header\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Chat Rooms\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"ad-space sidebar-ad-top\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ad-placeholder\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Advertisement\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"rooms-container\",children:rooms.length===0?/*#__PURE__*/_jsx(\"div\",{style:{padding:'20px',textAlign:'center',color:'#666'},children:isConnected?'Loading chat rooms...':'Connecting to server...'}):Object.entries(groupedRooms).map(_ref=>{let[category,categoryRooms]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"room-category\",children:[/*#__PURE__*/_jsxs(\"h3\",{className:\"category-title\",children:[getCategoryIcon(category),category]}),/*#__PURE__*/_jsx(\"div\",{className:\"rooms-list\",children:categoryRooms.map(room=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>joinRoom(room.id),className:\"room-item \".concat((currentRoom===null||currentRoom===void 0?void 0:currentRoom.roomId)===room.id?'active':''),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"room-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"room-name\",children:room.name}),/*#__PURE__*/_jsx(\"span\",{className:\"room-description\",children:room.description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"room-users\",children:[/*#__PURE__*/_jsx(Users,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:room.userCount||0})]})]},room.id))})]},category);})}),/*#__PURE__*/_jsx(\"div\",{className:\"ad-space sidebar-ad-bottom\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ad-placeholder\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Advertisement\"})})})]}),/*#__PURE__*/_jsx(\"main\",{className:\"chat-area\",children:currentRoom?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-title\",children:[/*#__PURE__*/_jsx(\"h2\",{children:currentRoom.roomName}),/*#__PURE__*/_jsxs(\"span\",{className:\"online-count\",children:[/*#__PURE__*/_jsx(Users,{className:\"w-4 h-4\"}),onlineUsers.length,\" online\"]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages\",ref:messagesContainerRef,onScroll:handleScroll,children:[messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-username\",children:message.username}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:new Date(message.timestamp).toLocaleTimeString()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:message.content})]}),(index+1)%10===0&&index<messages.length-1&&/*#__PURE__*/_jsx(\"div\",{className:\"ad-space message-ad\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ad-placeholder\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Advertisement\"})})})]},message.id)),typingUsers.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"typing-indicator\",children:/*#__PURE__*/_jsxs(\"span\",{children:[typingUsers.join(', '),\" \",typingUsers.length===1?'is':'are',\" typing...\"]})}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),showScrollButton&&/*#__PURE__*/_jsx(\"button\",{className:\"scroll-to-bottom\",onClick:scrollToBottom,children:/*#__PURE__*/_jsx(ChevronDown,{className:\"w-5 h-5\"})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:sendMessage,className:\"message-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message... (Press Enter to send)\",value:newMessage,onChange:handleTyping,onKeyPress:handleKeyPress,maxLength:500,autoComplete:\"off\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!newMessage.trim(),children:/*#__PURE__*/_jsx(Send,{className:\"w-5 h-5\"})})]})]}):/*#__PURE__*/_jsx(\"div\",{className:\"welcome-screen\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-content\",children:[/*#__PURE__*/_jsx(MessageCircle,{className:\"w-16 h-16 text-blue-500\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Welcome to ChatKaro\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Select a chat room from the sidebar to start chatting!\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ad-space welcome-ad\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ad-placeholder\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Advertisement\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"features\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"feature\",children:[/*#__PURE__*/_jsx(Globe,{className:\"w-6 h-6\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Regional Chat Rooms\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"feature\",children:[/*#__PURE__*/_jsx(Heart,{className:\"w-6 h-6\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Make New Friends\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"feature\",children:[/*#__PURE__*/_jsx(Users,{className:\"w-6 h-6\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Real-time Messaging\"})]})]})]})})}),currentRoom&&/*#__PURE__*/_jsxs(\"aside\",{className:\"users-sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"users-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Online Users\"}),/*#__PURE__*/_jsx(\"span\",{className:\"users-count\",children:onlineUsers.length})]}),/*#__PURE__*/_jsx(\"div\",{className:\"ad-space users-ad\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ad-placeholder\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Advertisement\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"users-list\",children:onlineUsers.map((username,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"user-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-avatar\",children:username.charAt(0).toUpperCase()}),/*#__PURE__*/_jsx(\"span\",{className:\"user-name\",children:username})]},index))})]})]}),/*#__PURE__*/_jsx(\"footer\",{className:\"app-footer\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ad-space footer-ad\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ad-placeholder\",children:/*#__PURE__*/_jsx(\"span\",{children:\"Advertisement\"})})})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","io","Send","Users","MessageCircle","Globe","Heart","Music","GraduationCap","ChevronDown","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","socket","process","env","NODE_ENV","window","location","origin","autoConnect","reconnection","reconnectionAttempts","reconnectionDelay","App","user","setUser","username","setUsername","rooms","setRooms","currentRoom","setCurrentRoom","messages","setMessages","newMessage","setNewMessage","onlineUsers","setOnlineUsers","typingUsers","setTypingUsers","isTyping","setIsTyping","showScrollButton","setShowScrollButton","isConnected","setIsConnected","joinError","setJoinError","usernameSuggestions","setUsernameSuggestions","isJoining","setIsJoining","isRestoringSession","setIsRestoringSession","messagesEndRef","messagesContainerRef","typingTimeoutRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleScroll","scrollTop","scrollHeight","clientHeight","isAtBottom","length","getUrlParams","params","URLSearchParams","search","get","room","updateUrl","roomId","set","newUrl","concat","pathname","toString","history","replaceState","urlParams","console","log","on","id","emit","reason","error","roomsList","userData","sessionData","users","message","suggestions","roomData","roomName","prev","data","updatedUsers","filter","u","map","_objectSpread","userCount","Set","heartbeat","setInterval","connected","handleBeforeUnload","addEventListener","handlePopState","find","r","clearInterval","removeEventListener","off","handleJoin","e","preventDefault","trimmedUsername","trim","joinRoom","sendMessage","content","handleStopTyping","setTimeout","handleKeyPress","key","shiftKey","handleTyping","target","value","clearTimeout","getCategoryIcon","category","className","groupedRooms","reduce","acc","push","children","onSubmit","type","placeholder","onChange","maxLength","disabled","required","suggestion","index","onClick","style","padding","textAlign","color","Object","entries","_ref","categoryRooms","name","description","ref","onScroll","Date","timestamp","toLocaleTimeString","join","onKeyPress","autoComplete","charAt","toUpperCase"],"sources":["/Users/ankit.sah/Desktop/chat/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport { Send, Users, MessageCircle, Globe, Heart, Music, GraduationCap, ChevronDown } from 'lucide-react';\nimport './App.css';\n\nconst socket = io(process.env.NODE_ENV === 'production' ? window.location.origin : 'http://localhost:5000', {\n  autoConnect: true,\n  reconnection: true,\n  reconnectionAttempts: 5,\n  reconnectionDelay: 1000\n});\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [rooms, setRooms] = useState([]);\n  const [currentRoom, setCurrentRoom] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [isTyping, setIsTyping] = useState(false);\n  const [showScrollButton, setShowScrollButton] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [joinError, setJoinError] = useState('');\n  const [usernameSuggestions, setUsernameSuggestions] = useState([]);\n  const [isJoining, setIsJoining] = useState(false);\n  const [isRestoringSession, setIsRestoringSession] = useState(true);\n  const messagesEndRef = useRef(null);\n  const messagesContainerRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    setShowScrollButton(false);\n  };\n\n  const handleScroll = () => {\n    if (messagesContainerRef.current) {\n      const { scrollTop, scrollHeight, clientHeight } = messagesContainerRef.current;\n      const isAtBottom = scrollHeight - scrollTop - clientHeight < 50;\n      setShowScrollButton(!isAtBottom && messages.length > 5);\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Helper function to get URL parameters\n  const getUrlParams = () => {\n    const params = new URLSearchParams(window.location.search);\n    return {\n      username: params.get('username'),\n      room: params.get('room')\n    };\n  };\n\n  // Helper function to update URL\n  const updateUrl = (username, roomId) => {\n    const params = new URLSearchParams();\n    if (username) params.set('username', username);\n    if (roomId) params.set('room', roomId);\n    \n    const newUrl = `${window.location.pathname}?${params.toString()}`;\n    window.history.replaceState({}, '', newUrl);\n  };\n\n  useEffect(() => {\n    // Try to restore session from URL parameters\n    const urlParams = getUrlParams();\n    if (urlParams.username) {\n      console.log('Restoring session from URL:', urlParams);\n      setUsername(urlParams.username);\n      // We'll restore the user and room after connecting to server\n    }\n    setIsRestoringSession(false);\n\n    // Handle connection events\n    socket.on('connect', () => {\n      console.log('Connected to server successfully!');\n      console.log('Socket ID:', socket.id);\n      setIsConnected(true);\n      \n      // Try to restore session from URL if we have parameters\n      const urlParams = getUrlParams();\n      if (urlParams.username && !user) {\n        console.log('Attempting to restore session for:', urlParams.username);\n        socket.emit('restore_session', urlParams);\n      }\n    });\n\n    socket.on('disconnect', (reason) => {\n      console.log('Disconnected from server:', reason);\n      setIsConnected(false);\n      // Reset state on disconnect\n      setCurrentRoom(null);\n      setMessages([]);\n      setOnlineUsers([]);\n      setTypingUsers([]);\n    });\n\n    socket.on('connect_error', (error) => {\n      console.error('Connection error:', error);\n    });\n\n    // Socket event listeners\n    socket.on('rooms_list', (roomsList) => {\n      console.log('Received rooms list:', roomsList);\n      setRooms(roomsList);\n    });\n\n    socket.on('user_joined', (userData) => {\n      setUser(userData);\n      setIsJoining(false);\n      setJoinError('');\n      setUsernameSuggestions([]);\n      \n      // Update URL with username\n      updateUrl(userData.username, null);\n      console.log('Username saved to URL');\n    });\n\n    socket.on('session_restored', (sessionData) => {\n      console.log('Session restored successfully:', sessionData);\n      setUser(sessionData.user);\n      if (sessionData.currentRoom) {\n        setCurrentRoom(sessionData.currentRoom);\n        setMessages(sessionData.currentRoom.messages || []);\n        setOnlineUsers(sessionData.currentRoom.users || []);\n        // Update URL to match restored session\n        updateUrl(sessionData.user.username, sessionData.currentRoom.roomId);\n      }\n      setIsRestoringSession(false);\n    });\n\n    socket.on('session_restore_failed', (error) => {\n      console.log('Session restore failed:', error.message);\n      // Clear URL parameters if session restore fails\n      window.history.replaceState({}, '', window.location.pathname);\n      setIsRestoringSession(false);\n    });\n\n    socket.on('join_error', (error) => {\n      console.error('Join error:', error.message);\n      setJoinError(error.message);\n      setUsernameSuggestions(error.suggestions || []);\n      setIsJoining(false);\n    });\n\n    socket.on('room_joined', (roomData) => {\n      setCurrentRoom(roomData);\n      setMessages(roomData.messages);\n      setOnlineUsers(roomData.users);\n      \n      // Update URL with current room\n      if (user) {\n        updateUrl(user.username, roomData.roomId);\n        console.log('Current room saved to URL:', roomData.roomName);\n      }\n    });\n\n    socket.on('new_message', (message) => {\n      setMessages(prev => [...prev, message]);\n    });\n\n    socket.on('user_joined_room', (data) => {\n      setOnlineUsers(prev => [...prev, data.username]);\n    });\n\n    socket.on('user_left', (data) => {\n      console.log('User left:', data.username);\n      // Use the updated users list if provided, otherwise filter out the user\n      if (data.updatedUsers) {\n        setOnlineUsers(data.updatedUsers);\n      } else {\n        setOnlineUsers(prev => prev.filter(u => u !== data.username));\n      }\n    });\n\n    socket.on('room_updated', (data) => {\n      setRooms(prev => prev.map(room => \n        room.id === data.roomId \n          ? { ...room, userCount: data.userCount }\n          : room\n      ));\n    });\n\n    socket.on('user_typing', (username) => {\n      setTypingUsers(prev => [...new Set([...prev, username])]);\n    });\n\n    socket.on('user_stopped_typing', (username) => {\n      setTypingUsers(prev => prev.filter(u => u !== username));\n    });\n\n    // Handle heartbeat\n    socket.on('pong', () => {\n      // Server responded to ping\n    });\n\n    // Send periodic heartbeat\n    const heartbeat = setInterval(() => {\n      if (socket.connected) {\n        socket.emit('ping');\n      }\n    }, 30000); // Every 30 seconds\n\n    // Handle browser close/refresh\n    const handleBeforeUnload = () => {\n      if (user) {\n        socket.emit('leave_chat');\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n\n    // Handle browser navigation (back/forward buttons)\n    const handlePopState = () => {\n      const urlParams = getUrlParams();\n      console.log('Browser navigation detected, URL params:', urlParams);\n      \n      if (urlParams.username && urlParams.username !== user?.username) {\n        // Username changed via browser navigation\n        if (user) {\n          // User is already logged in but URL username is different\n          // We could either logout and re-login or ignore this\n          console.log('Username mismatch detected via navigation');\n        } else {\n          // No user logged in, attempt to restore from URL\n          setUsername(urlParams.username);\n          if (socket.connected) {\n            socket.emit('restore_session', urlParams);\n          }\n        }\n      }\n      \n      if (urlParams.room && urlParams.room !== currentRoom?.roomId) {\n        // Room changed via browser navigation\n        if (user && rooms.find(r => r.id === urlParams.room)) {\n          console.log('Joining room from URL navigation:', urlParams.room);\n          socket.emit('join_room', urlParams.room);\n        }\n      }\n    };\n\n    window.addEventListener('popstate', handlePopState);\n\n    // Cleanup function\n    return () => {\n      clearInterval(heartbeat);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      window.removeEventListener('popstate', handlePopState);\n      socket.off('connect');\n      socket.off('disconnect');\n      socket.off('connect_error');\n      socket.off('rooms_list');\n      socket.off('user_joined');\n      socket.off('session_restored');\n      socket.off('session_restore_failed');\n      socket.off('join_error');\n      socket.off('room_joined');\n      socket.off('new_message');\n      socket.off('user_joined_room');\n      socket.off('user_left');\n      socket.off('room_updated');\n      socket.off('user_typing');\n      socket.off('user_stopped_typing');\n      socket.off('pong');\n    };\n  }, [user]);\n\n  const handleJoin = (e) => {\n    e.preventDefault();\n    const trimmedUsername = username.trim();\n    \n    if (!trimmedUsername) {\n      setJoinError('Please enter a username');\n      return;\n    }\n    \n    if (trimmedUsername.length < 2) {\n      setJoinError('Username must be at least 2 characters long');\n      return;\n    }\n    \n    if (trimmedUsername.length > 20) {\n      setJoinError('Username must be 20 characters or less');\n      return;\n    }\n    \n    setIsJoining(true);\n    setJoinError('');\n    socket.emit('join_user', { username: trimmedUsername });\n  };\n\n  const joinRoom = (roomId) => {\n    socket.emit('join_room', roomId);\n    // Update URL immediately when joining room\n    if (user) {\n      updateUrl(user.username, roomId);\n    }\n  };\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    if (newMessage.trim() && currentRoom) {\n      socket.emit('send_message', { content: newMessage.trim() });\n      setNewMessage('');\n      handleStopTyping();\n      // Auto-scroll to bottom when sending a message\n      setTimeout(scrollToBottom, 100);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage(e);\n    }\n  };\n\n  const handleTyping = (e) => {\n    setNewMessage(e.target.value);\n    \n    if (!isTyping) {\n      setIsTyping(true);\n      socket.emit('typing_start');\n    }\n\n    clearTimeout(typingTimeoutRef.current);\n    typingTimeoutRef.current = setTimeout(() => {\n      handleStopTyping();\n    }, 1000);\n  };\n\n  const handleStopTyping = () => {\n    if (isTyping) {\n      setIsTyping(false);\n      socket.emit('typing_stop');\n    }\n  };\n\n  const getCategoryIcon = (category) => {\n    switch (category) {\n      case 'Regional': return <Globe className=\"w-4 h-4\" />;\n      case 'Social': return <Heart className=\"w-4 h-4\" />;\n      case 'Entertainment': return <Music className=\"w-4 h-4\" />;\n      case 'Education': return <GraduationCap className=\"w-4 h-4\" />;\n      case 'International': return <Globe className=\"w-4 h-4\" />;\n      default: return <MessageCircle className=\"w-4 h-4\" />;\n    }\n  };\n\n  const groupedRooms = rooms.reduce((acc, room) => {\n    if (!acc[room.category]) {\n      acc[room.category] = [];\n    }\n    acc[room.category].push(room);\n    return acc;\n  }, {});\n\n  console.log('Current rooms state:', rooms);\n  console.log('Grouped rooms:', groupedRooms);\n\n  if (!user) {\n    return (\n      <div className=\"login-container\">\n        <div className=\"login-card\">\n          <div className=\"login-header\">\n            <MessageCircle className=\"w-12 h-12 text-blue-500\" />\n            <h1>ChatKaro</h1>\n            <p>{isRestoringSession ? 'Restoring your session...' : 'Free Online Chat Rooms'}</p>\n          </div>\n          <form onSubmit={handleJoin} className=\"login-form\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter your username (2-20 characters)\"\n              value={username}\n              onChange={(e) => {\n                setUsername(e.target.value);\n                if (joinError) {\n                  setJoinError(''); // Clear error when typing\n                  setUsernameSuggestions([]);\n                }\n              }}\n              maxLength={20}\n              disabled={isJoining}\n              required\n            />\n            {joinError && (\n              <div className=\"error-message\">\n                {joinError}\n                {usernameSuggestions.length > 0 && (\n                  <div className=\"username-suggestions\">\n                    <p>Try these instead:</p>\n                    <div className=\"suggestions-list\">\n                      {usernameSuggestions.map((suggestion, index) => (\n                        <button\n                          key={index}\n                          type=\"button\"\n                          className=\"suggestion-btn\"\n                          onClick={() => {\n                            setUsername(suggestion);\n                            setJoinError('');\n                            setUsernameSuggestions([]);\n                          }}\n                        >\n                          {suggestion}\n                        </button>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n            <button type=\"submit\" disabled={isJoining || !username.trim()}>\n              {isJoining ? 'Joining...' : 'Join Chat'}\n            </button>\n          </form>\n          <div className=\"login-footer\">\n            <p>Connect with people from around the world</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <div className=\"header-content\">\n          <div className=\"header-left\">\n            <MessageCircle className=\"w-8 h-8\" />\n            <h1>ChatKaro</h1>\n          </div>\n          <div className=\"header-center\">\n            {/* Google Ads - Header Banner */}\n            <div className=\"ad-space header-ad\">\n              <div className=\"ad-placeholder\">\n                <span>Advertisement</span>\n              </div>\n            </div>\n          </div>\n          <div className=\"header-right\">\n            <span className=\"username\">Welcome, {user.username}!</span>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"app-content\">\n        <aside className=\"sidebar\">\n          <div className=\"sidebar-header\">\n            <h2>Chat Rooms</h2>\n          </div>\n          \n          {/* Google Ads - Sidebar Top */}\n          <div className=\"ad-space sidebar-ad-top\">\n            <div className=\"ad-placeholder\">\n              <span>Advertisement</span>\n            </div>\n          </div>\n          \n          <div className=\"rooms-container\">\n            {rooms.length === 0 ? (\n              <div style={{padding: '20px', textAlign: 'center', color: '#666'}}>\n                {isConnected ? 'Loading chat rooms...' : 'Connecting to server...'}\n              </div>\n            ) : (\n              Object.entries(groupedRooms).map(([category, categoryRooms]) => (\n              <div key={category} className=\"room-category\">\n                <h3 className=\"category-title\">\n                  {getCategoryIcon(category)}\n                  {category}\n                </h3>\n                <div className=\"rooms-list\">\n                  {categoryRooms.map(room => (\n                    <button\n                      key={room.id}\n                      onClick={() => joinRoom(room.id)}\n                      className={`room-item ${currentRoom?.roomId === room.id ? 'active' : ''}`}\n                    >\n                      <div className=\"room-info\">\n                        <span className=\"room-name\">{room.name}</span>\n                        <span className=\"room-description\">{room.description}</span>\n                      </div>\n                      <div className=\"room-users\">\n                        <Users className=\"w-4 h-4\" />\n                        <span>{room.userCount || 0}</span>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n              ))\n            )}\n          </div>\n          \n          {/* Google Ads - Sidebar Bottom */}\n          <div className=\"ad-space sidebar-ad-bottom\">\n            <div className=\"ad-placeholder\">\n              <span>Advertisement</span>\n            </div>\n          </div>\n        </aside>\n\n        <main className=\"chat-area\">\n          {currentRoom ? (\n            <>\n              <div className=\"chat-header\">\n                <div className=\"chat-title\">\n                  <h2>{currentRoom.roomName}</h2>\n                  <span className=\"online-count\">\n                    <Users className=\"w-4 h-4\" />\n                    {onlineUsers.length} online\n                  </span>\n                </div>\n              </div>\n\n              <div className=\"messages-container\">\n                <div className=\"messages\" ref={messagesContainerRef} onScroll={handleScroll}>\n                  {messages.map((message, index) => (\n                    <div key={message.id}>\n                      <div className=\"message\">\n                        <div className=\"message-header\">\n                          <span className=\"message-username\">{message.username}</span>\n                          <span className=\"message-time\">\n                            {new Date(message.timestamp).toLocaleTimeString()}\n                          </span>\n                        </div>\n                        <div className=\"message-content\">{message.content}</div>\n                      </div>\n                      {/* Show ad every 10 messages */}\n                      {(index + 1) % 10 === 0 && index < messages.length - 1 && (\n                        <div className=\"ad-space message-ad\">\n                          <div className=\"ad-placeholder\">\n                            <span>Advertisement</span>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                  {typingUsers.length > 0 && (\n                    <div className=\"typing-indicator\">\n                      <span>{typingUsers.join(', ')} {typingUsers.length === 1 ? 'is' : 'are'} typing...</span>\n                    </div>\n                  )}\n                  <div ref={messagesEndRef} />\n                </div>\n                \n                {/* Scroll to bottom button */}\n                {showScrollButton && (\n                  <button className=\"scroll-to-bottom\" onClick={scrollToBottom}>\n                    <ChevronDown className=\"w-5 h-5\" />\n                  </button>\n                )}\n              </div>\n\n              <form onSubmit={sendMessage} className=\"message-form\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Type your message... (Press Enter to send)\"\n                  value={newMessage}\n                  onChange={handleTyping}\n                  onKeyPress={handleKeyPress}\n                  maxLength={500}\n                  autoComplete=\"off\"\n                />\n                <button type=\"submit\" disabled={!newMessage.trim()}>\n                  <Send className=\"w-5 h-5\" />\n                </button>\n              </form>\n            </>\n          ) : (\n            <div className=\"welcome-screen\">\n              <div className=\"welcome-content\">\n                <MessageCircle className=\"w-16 h-16 text-blue-500\" />\n                <h2>Welcome to ChatKaro</h2>\n                <p>Select a chat room from the sidebar to start chatting!</p>\n                \n                {/* Google Ads - Welcome Screen */}\n                <div className=\"ad-space welcome-ad\">\n                  <div className=\"ad-placeholder\">\n                    <span>Advertisement</span>\n                  </div>\n                </div>\n                \n                <div className=\"features\">\n                  <div className=\"feature\">\n                    <Globe className=\"w-6 h-6\" />\n                    <span>Regional Chat Rooms</span>\n                  </div>\n                  <div className=\"feature\">\n                    <Heart className=\"w-6 h-6\" />\n                    <span>Make New Friends</span>\n                  </div>\n                  <div className=\"feature\">\n                    <Users className=\"w-6 h-6\" />\n                    <span>Real-time Messaging</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </main>\n\n        {currentRoom && (\n          <aside className=\"users-sidebar\">\n            <div className=\"users-header\">\n              <h3>Online Users</h3>\n              <span className=\"users-count\">{onlineUsers.length}</span>\n            </div>\n            \n            {/* Google Ads - Users Sidebar */}\n            <div className=\"ad-space users-ad\">\n              <div className=\"ad-placeholder\">\n                <span>Advertisement</span>\n              </div>\n            </div>\n            \n            <div className=\"users-list\">\n              {onlineUsers.map((username, index) => (\n                <div key={index} className=\"user-item\">\n                  <div className=\"user-avatar\">{username.charAt(0).toUpperCase()}</div>\n                  <span className=\"user-name\">{username}</span>\n                </div>\n              ))}\n            </div>\n          </aside>\n        )}\n        \n      </div>\n      \n      {/* Google Ads - Footer Banner */}\n      <footer className=\"app-footer\">\n        <div className=\"ad-space footer-ad\">\n          <div className=\"ad-placeholder\">\n            <span>Advertisement</span>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}